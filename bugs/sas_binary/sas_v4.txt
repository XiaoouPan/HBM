# 3 outcomes clustering groups with continuous activity

model { 
  for (j in 1:ninter) {
    response[1, j] ~ dinterval(Z[1, j, 1], 0)
    activity[1, j] ~ dinterval(Z[1, j, 2], 0)
    Z[1, j, 1:2] ~ dmnorm(c(mu11, mu21), prec)
    response[2, j] ~ dinterval(Z[2, j, 1], 0)
    activity[2, j] ~ dinterval(Z[2, j, 2], 0)
    Z[2, j, 1:2] ~ dmnorm(c(mu12, mu22), prec)
    response[3, j] ~ dinterval(Z[3, j, 1], 0)
    activity[3, j] ~ dinterval(Z[3, j, 2], 0)
    Z[3, j, 1:2] ~ dmnorm(c(mu13, mu23), prec)
    response[4, j] ~ dinterval(Z[4, j, 1], 0)
    activity[4, j] ~ dinterval(Z[4, j, 2], 0)
    Z[4, j, 1:2] ~ dmnorm(c(mu14, mu24), prec)
  }
  mu14 <- ifelse(ss1[3] == 0, mu11, mu11 + diff1)
  mu24 <- ifelse(ss2[3] == 0, mu21, mu21 + diff2)
  mu13 <- ifelse(ss1[2] == 0, mu11, mu11 + diff1)
  mu23 <- ifelse(ss2[2] == 0, mu21, mu21 + diff2)
  mu12 <- ifelse(ss1[1] == 0, mu11, mu11 + diff1)
  mu22 <- ifelse(ss2[1] == 0, mu21, mu21 + diff2)
  mu11 ~ dnorm(0, 0.001)
  mu21 ~ dnorm(0, 0.001)
  for (i in 1:(N - 1)) {
    ss1[i] ~ dbern(0.5)
    ss2[i] ~ dbern(0.5)
  }
  diff1 ~ dnorm(1, 0.001)
  diff2 ~ dnorm(1, 0.001)
  prec[1, 1] <- 1.0 / (1 - rho * rho)
  prec[1, 2] <- -rho / (1 - rho * rho)
  prec[2, 1] <- -rho / (1 - rho * rho)
  prec[2, 2] <- 1.0 / (1 - rho * rho)
  rho ~ dunif(-1, 1)
}
